Error Bounds for Transductive Learning via Compression and Clustering

Philip Derbeko Ran El-Yaniv Ron Meir

Technion - Israel Institute of Technology {philip,rani}@cs.technion.ac.il rmeir@ee.technion.ac.il

Abstract This paper is concerned with transductive learning. Although transduction appears to be an easier task than induction, there have not been many provably useful algorithms and bounds for transduction. We present explicit error bounds for transduction and derive a general technique for devising bounds within this setting. The technique is applied to derive error bounds for compression schemes such as (transductive) SVMs and for transduction algorithms based on clustering.

1 Introduction and Related Work In contrast to inductive learning, in the transductive setting the learner is given both the training and test sets prior to learning. The goal of the learner is to infer (or "transduce") the labels of the test points. The transduction setting was introduced by Vapnik [1, 2] who proposed basic bounds and an algorithm for this setting. Clearly, inferring the labels of points in the test set can be done using an inductive scheme. However, as pointed out in [2], it makes little sense to solve an easier problem by `reducing' it to a much more difficult one. In particular, the prior knowledge carried by the (unlabeled) test points can be incorporated into an algorithm, potentially leading to superior performance. Indeed, a number of papers have demonstrated empirically that transduction can offer substantial advantage over induction whenever the training set is small or moderate (see e.g. [3, 4, 5, 6]). However, unlike the current state of affairs in induction, the question of what are provably effective learning principles for transduction is quite far from being resolved. In this paper we provide new error bounds and a general technique for transductive learning. Our technique is based on bounds that can be viewed as an extension of McAllester's PAC-Bayesian framework [7, 8] to transductive learning. The main advantage of using this framework in transduction is that here priors can be selected after observing the unlabeled data (but before observing the labeled sample). This flexibility allows for the choice of "compact priors" (with small support) and therefore, for tight bounds. Another simple observation is that the PAC-Bayesian framework can be operated with polynomially (in m, the training sample size) many different priors simultaneously. Altogether, this added flexibility, of using data-dependent multiple priors allows for easy derivation of tight error bounds for "compression schemes" such as (transductive) SVMs and for clustering algorithms. We briefly review some previous results. The idea of transduction, and a specific algorithm for SVM transductive learning, was introduced and studied by Vapnik (e.g. [2]), where an


error bound is also proposed. However, this bound is implicit and rather unwieldy and, to the best of our knowledge, has not been applied in practical situations. A PAC-Bayes bound [7] for transduction with Perceptron Decision Trees is given in [9]. The bound is data-dependent depending on the number of decision nodes, the margins at each node and the sample size. However, the authors state that the transduction bound is not much tighter than the induction bound. Empirical tests show that this transduction algorithm performs slightly better than induction in terms of the test error, however, the advantage is usually statistically insignificant. Refining the algorithm of [2] a transductive algorithm based on a SVMs is proposed in [3]. The paper also provides empirical tests indicating that transduction is advantageous in the text categorization domain. An error bound for transduction, based on the effective VC Dimension, is given in [10]. More recently Lanckriet et al. [11] derived a transductive bound for kernel methods based on spectral properties of the kernel matrix. Blum and Langford [12] recently also established an implicit bound for transduction, in the spirit of the results in [2]. 2 The Transduction Setup We consider the following setting proposed by Vapnik ([2] Chp. 8), which for simplicity is described in the context of binary classification (the general case will be discussed in the full paper). Let H be a set of binary hypotheses consisting of functions from input space

X to {±1} and let Xm +u = {x1,...,xm } be a set of points from X each of which is +u

chosen i.i.d. according to some unknown distribution µ(x). We call Xm

+u

the full sample.

Let Xm = {x1,...,xm} and Ym = {y1,...,ym}, where Xm is drawn uniformly from sample. In this paper we assume that yi = (xi) for some unknown function . The and Xu our goal is to choose h  H which predicts the labels of points in Xu as accurately as possible. For each h  H and a set Z = x1,...,x| of samples define

Xm +u and yi  {±1}. The set Sm = {(x1,y1),..., (xm,ym)} is referred to as a training

remaining subset Xu = Xm +u \ Xm is referred to as the unlabeled sample. Based on Sm

Z|

|Z|

Rh(Z) = 1 |Z| (h(xi),yi), (1)

i=1

where in our case (·, ·) is the zero-one loss function. Our goal in transduction is to learn an h such that Rh(Xu) is as small as possible. This problem setup is summarized by the following transduction "protocol" introduced in [2] and referred to as Setting 1:

(i) A full sample Xm given.1 +u = {x1,...,xm } consisting of arbitrary m + u points is +u

(ii) We then choose uniformly at random the training sample Xm  Xm +u

and re-

ceive its labeling Ym; the resulting training set is Sm = (Xm,Ym) and the re(iii) Using both Sm and Xu we select a classifier h  H whose quality is measured by Rh(Xu). Vapnik [2] also considers another formulation of transduction, referred to as Setting 2: (i) We are given a training set Sm = (Xm,Ym) selected i.i.d according to µ(x,y). (ii) An independent test set Su = (Xu,Yu) of u samples is then selected in the same manner. independently at random according to some source distribution µ(x).

maining set Xu is the unlabeled sample, Xu = Xm +u \ Xm;

1 The original Setting 1, as proposed by Vapnik, discusses a full sample whose points are chosen


(iii) We are required to choose our best h  H based on Sm and Xu so as to minimize

m+u

Rm,u(h) = 1 u (h(xi),yi)dµ(x1,y1)···dµ(xm ,ym ).

+u +u (2)

i=m+1

Even though Setting 2 may appear more applicable in practical situations than Setting 1, the derivation of theoretical results can be easier within Setting 1. Nevertheless, as far as the expected losses are concerned, Vapnik [2] shows that an error bound in Setting 1 implies an equivalent bound in Setting 2. In view of this result we restrict ourselves in the sequel to Setting 1. We make use of the following quantities, which are all instances of (1). The quantity Rh(Xm ) is called the full sample risk of the hypothesis h, Rh(Xu) is referred to as

+u

the transduction risk (of h), and Rh(Xm) is the training error (of h). Thus, Rh(Xm) is the standard training error denoted by Rh(Sm). While our objective in transduction is to ^ achieve small error over the unlabeled set (i.e. to minimize Rh(Xu)), it turns out that it is much easier to derive error bounds for the full sample risk. The following simple lemma translates an error bound on Rh(Xm ), the full sample risk, to an error bound on the

+u

transduction risk Rh(Xu).

Lemma 2.1 For any h  H and any C Rh(Xm )  Rh(Sm) + C

^ +u

Proof: For any h

 ^ Rh(Xu)  Rh(Sm) + m + u u · C. (3)

Rh(Xm ) = +u mRh(Xm) + uRh(Xu). m + u (4)

Substituting Rh(Sm) for Rh(Xm) in (4) and then substituting the result for the left-hand ^ side of (3) we get

Rh(Xm ) = +u mRh(Sm) + uRh(Xu) ^ m + u ^  Rh(Sm) + C.

The equivalence (3) is now obtained by isolating Rh(Xu) on the left-hand side. 3 General Error Bounds for Transduction 2

Consider a hypothesis class H and assume for simplicity that H is countable; in fact, in the case of transduction it suffices to consider a finite hypothesis class. To see this note that all m + u points are known in advance. Thus, in the case of binary classification

(for example) it suffices to consider at most 2m +u

possible dichotomies. Recall that in the

setting considered we select a sub-sample of m points from the set Xm +u

of cardinality

m+u. This corresponds to a selection of m points without replacement from a set of m+u points, leading to the m points being dependent. A naive utilization of large deviation bounds would therefore not be directly applicable in this setting. However, Hoeffding (see Theorem 4 in [13]) pointed out a simple procedure to transform the problem into one involving independent data. While this procedure leads to non-trivial bounds, it does not fully take advantage of the transductive setting and will not be used here. Consider for simplicity the case of binary classification. In this case we make use of the following concentration inequality, based on [14]. Theorem 3.1 Let C = {c1,...,cN}, ci  {0, 1}, be a finite set of binary numbers, and

set c¯ = (1/N)

N i=1

ci. Let Z1,...,Zm, be random variables obtaining their values


by sampling C uniformly at random without replacement. Set Z = (1/m)  = m/N. Then, if   min{1 - c,c¯(1 - )/},

2 ¯

Pr{Z - EZ > }  exp -mD(¯+  c¯) - (N - m) D c¯- c  1 - 

m i=1 Zi and

c¯ + 7log(N + 1) ,

where D(p q) = p log(p/q) = (1 - p)log(1 - p)/(1 - q), p,q,  [0, 1] is the binary Kullback-Leibler divergence. Using this result we obtain the following error bound for transductive classification.

Theorem 3.2 Let Xm +u = XmXu be the full sample and let p = p(Xm ) be a (prior) +u

distribution over the class of binary hypotheses H that may depend on the full sample. Let   (0,1) be given. Then, with probability at least 1 -  over choices of Sm (from the full sample) the following bound holds for any h  H,

log + ln + 7log(m + u + 1)

Rh(Xu)  Rh(Sm) + ^

2 log 1 p(h)

2Rh(Sm)(m + u) ^ u

+ ln m 

1 p(h) m 

m - 1

+ 7log(m + u + 1)

+ . (5)

m - 1

Proof: (sketch) In our transduction setting the set Xm (and therefore Sm) is obtained by

sampling the full sample Xm that

+u uniformly at random without replacement. We first claim

EmRh(Sm) = Rh(Xm ), where Em(·) is the expectation with respect to a random choice of Sm from Xm out replacement. This is shown as follows. +u

1

m+u m

EmRh(Sm) = ^ ^ Rh(Sm) =

1

m+u m

1 m

^

+u

(6) with-

Sm

(h(x),(x)).

XmXm +n xSm

By symmetry, all points x  Xm

times; this number is precisely

+u are counted on the right-hand side an equal number of

m+u m

-

m+u-1 m

=

m+u-1 m-1

. The equality (6) is obtained

m+u-1 m-1 / m+u m = m m+u .

by considering the definition of Rh(Xm ) and noting that +u

The remainder of the proof combines Theorem 3.1 and the techniques presented in [15]. The details will be provided in the full paper. 2 Notice that when Rh(Sm)  0 the square root in (5) vanishes and faster rates are obtained. ^ to choose the prior distribution p(h). This advantage has already been alluded to in [2], but does not seem to have been widely used in practice. Additionally, observe that (5) holds with probability at least 1 -  with respect to the random selection of sub-samples of size m from the fixed set Xm . This should be contrasted with the standard inductive setting

An important feature of Theorem 3.2 is that it allows one to use the sample Xm +u in order

+u

results where the probabilities are with respect to a random choice of m training points chosen i.i.d. from µ(x,y). The next bound we present is analogous to McAllester's Theorem 1 in [8]. This theorem concerns Gibbs composite classifiers, which are distributions over the base classifiers in H. For any distribution q over H denote by Gq the Gibbs classifier, which classifies an

2 The second condition,   c¯(1 - )/, simply guarantees that the number of `ones' in the

sub-sample does not exceed their number in the original sample.


instance (in Xu) by randomly choosing, according to q, one hypothesis h  H. For Gibbs classifiers we now extend definition (1) as follows. Let Z = x1,...,x| be any set of

Z|

samples and let Gq be a Gibbs classifier over H. The risk of Gq over Z is RGq(Z) =

Eh q (1/|Z|) |Z| i=1 (h(xi),(xi)) . As before, when Z = Xm (the training set) we

use the standard notation RGq(Sm) = RGq(Xm). Due to space limitations, the proof of ^ the following theorem will appear in the full paper. Theorem 3.3 Let Xm be the full sample. Let p be a distribution over H that may depend Xu. Let   (0,1) be given. With probability at least 1 -  over the choices of Sm for any distribution q

+u

and let q be a (posterior) distribution over H that may depend on both Sm and on Xm +u

D(q p) + ln + 7log(m + u + 1)

RGq(Xu)  RGq(Sm) + ^

2 D(q p) + ln

2RGq(Sm)(m + u) ^ u

m  + 7 m

m 

m - 1

+ log(m + u + 1) .

m - 1

In the context of inductive learning, a major obstacle in generating meaningful and effective bounds using the PAC-Bayesian framework [8] is the construction of "compact priors". Here we discuss two extensions to the PAC-Bayesian scheme, which together allow for easy choices of compact priors that can yield tight error bounds. The first extension we offer is the use of multiple priors. Instead of a single prior p in the original PACBayesian framework we observe that one can use all PAC-Bayesian bounds with a number of priors p1,..., pk and then replace the complexity term ln(1/p(h)) (in Theorem 3.2) by mini ln(1/pi(h)), at a cost of an additional ln k term (see below). Similarly, in Theorem 3.3 we can replace the KL-divergence term in the bound with mini D(q||pi). The penalty for using k priors is logarithmic in k (specifically the ln(1/) term in the original bound becomes ln(k/)). As long as k is sub-exponential in m we still obtain effective generalization bounds. The second "extension" is simply the feature of our transduction bounds (Theorems 3.2 and 3.3), which allows for the priors to be dependent on the full sample Xm . The combination of these two simple ideas yields a powerful technique for

+u

deriving error bounds in realistic transductive settings. After stating the extended result we later use it for deriving tight bounds for known learning algorithms and for deriving new algorithms. Suppose that instead of a single prior p over H we want to utilize k priors, p1,...,pk and in retrospect choose the best among the k corresponding PAC-Bayesian bounds. The following theorem shows that one can use polynomially many priors with a minor penalty. The proof, which is omitted due to space limitations, utilizes the union bound in a straightforward manner. Theorem 3.4 Let the conditions of Theorem 3.2 hold, except that we now have k prior distributions p1,..., pk defined over H, each of which may depend on Xm . Let  

+u

(0,1) be given. Then, with probability at least 1- over random choices of sub-samples of

size m from the full-sample, for all h  H, (5) holds with p(h) replaced by min1 and log is replaced by log .

1  k 

ik i p (h)

Remark: A similar result holds for the Gibbs algorithm of Theorem 3.3. Also, as noted by one of the reviewers, when the supports of the k priors intersect (i.e. there is at least one pair of priors pi and pj with overlapping support), then one can do better by utilizing the supports are disjoint, these two views (of multiple priors and a super prior) are equivalent. In the applications below we utilize non-intersecting priors.

"super prior" p = 1 k i pi within the original Theorem 3.2. However, note that when the


4 Bounds for Compression Algorithms Here we propose a technique for bounding the error of "compression" algorithms based on appropriate construction of prior probabilities. Let A be a learning algorithm. Intuitively, A is a "compression scheme" if it can generate the same hypothesis using a subset of the data. More formally, a learning algorithm A (viewed as a function from samples to some hypothesis class) is a compression scheme with respect to a sample Z if there is a subsample Z , Z  Z, such that A(Z ) = A(Z). Observe that the SVM approach is a compression scheme, with Z being determined by the set of support vectors. Let A be a deterministic compression scheme and consider the full sample Xm . For construct all possible dichotomies of that subset (note that we are not proposing this approach as an algorithm, but rather as a means to derive bounds; in practice one need not construct all these dichotomies). A deterministic algorithm A uniquely determines at most one hypothesis h  H for each dichotomy.3 For each , let the set of hypotheses generated by this procedure be denoted by H. For the rest of this discussion we assume the worst the bounds improve). The prior p is then defined to be a uniform distribution over H. are independent of Sm). Any hypothesis selected by the learning algorithm A based on the labeled sample Sm and on the test set Xu belongs to m H. The motivation for this

+u

of size , and for each subset each integer  = 1,...,m, consider all subsets of Xm +u

case where |H| = m+u  (i.e. if H does not contains one hypothesis for each dichotomy

In this way we have m priors, p1,..., pm which are constructed using only Xm +u (and

=1

construction is as follows. Each  can be viewed as our "guess" for the maximal number of compression points that will be utilized by a resulting classifier. For each such  the prior p is constructed over all possible classifiers that use  compression points. By systematically considering all possible dichotomies of  points we can characterize a relatively small subset of H without observing labels of the training points. Thus, each prior p represents one such guess. Using Theorem 3.4 we are later allowed to choose in retrospect the bound corresponding to the best "guess". The following corollary identifies an upper bound on the divergence in terms of the observed size of the compression set of the final classifier. Corollary 4.1 Let the conditions of Theorem 3.4 hold. Let A be a deterministic learning algorithm leading to a hypothesis h  H based on a compression set of size s. Then with probability at least 1 -  for all h  H, (5) holds with log(1/p(h)) replaced by slog(2e(m + u)/s) and ln(m/) replaced by ln(m2/). Proof: Recall that Hs  H is the support set of ps and that ps(h) = 1/|Hs| for all

h  Hs, implying that ln(1/ps(h)) = |Hs|. Using the inequality

we have that |Hs| = 2s

m+u s

m+u s

 (e(m+u)/s)s

 (2e(m + u)/s)s. Substituting this result in Theorem 3.4

while restricting the minimum over i to be over i  s, leads to the desired result. 2

The bound of Corollary 4.1 can be easily computed once the classifier is trained. If the size of the compression set happens to be small, we obtain a tight bound. SVM classification is one of the best studied compression schemes. The compression set for a sample Sm is given by the subset of support vectors. Thus the bound in Corollary 4.1 immediately applies with s being the number of observed support vectors (after training). We note that this bound is similar to a recently derived compression bound for inductive learning (Theorem 5.18 in [16]). Also, observe that the algorithm itself (inductive SVM) did not use in this case the unlabeled sample (although the bound does use this sample). Nevertheless, using exactly the same technique we obtain error bounds for the transductive SVM algorithms in [2, 3].4 space without soft margin will fail to classify non linearly-separable dichotomies of Xm . proach rather than "maximum margin".

3 It might be that for some dichotomies the algorithm will fail. For example, an SVM in feature

+u

Note however that our bounds are optimized with a "minimum number of support vectors" ap4


5 Bounds for Clustering Algorithms Some learning problems do not allow for high compression rates using compression schemes such as SVMs (i.e. the number of support vectors can sometimes be very large). A considerably stronger type of compression can often be achieved by clustering algorithms. While there is lack of formal links between entirely unsupervised clustering and classification, within a transduction setting we can provide a principled approach to using clustering algorithms for classification. Let A be any (deterministic) clustering algorithm which, given the full sample Xm , can cluster this sample into any desired number of each partition is denoted by C. For each value of , let H consist of those hypotheses which assign an identical label to all points in the same cluster of partition C, and define the prior p(h) = 1/2 for each h  H and zero otherwise (note that there are 2 possible dichotomies). The learning algorithm selects a hypothesis as follows. Upon observing the labeled sample Sm = (Xm,Ym), for each of the clusterings C2,...,Cc constructed above, it assigns a label to each cluster based on the majority vote from the labels Ym of points falling within the cluster (in case of ties, or if no points from Xm belong to the cluster, choose a label arbitrarily). Doing this leads to c - 1 classifiers h,  = 2,...,c. For each h there is a valid error bound as given by Theorem 3.4 and all these bounds are valid simultaneously. Thus we choose the best classifier (equivalently, number of clusters) for which the best bound holds. We thus have the following corollary of Theorem 3.4 and Lemma 2.1. Corollary 5.1 Let A be any clustering algorithm and let h,  = 2,...,c be classifications the training set Sm, as described above. Let   (0, 1) be given. Then with probability at least 1 - , for all , (5) holds with log(1/p(h)) replaced by  and ln(m/) replaced by ln(mc/). Error bounds obtained using Corollary 5.1 can be rather tight when the clustering algorithm is successful (i.e. when it captures the class structure in the data using a small number of clusters). Corollary 5.1 can be extended in a number of ways. One simple extension is the use of an ensemble of clustering algorithms. Specifically, we can concurrently apply k clustering algorithm (using each algorithm to cluster the data into  = 2,...,c clusters). We thus obtain kc hypotheses (partitions of Xm ). By a simple application of the union bound

+u

clusters. We use A to cluster Xm

+u

gorithm generates a collection of partitions of Xm

into 2, 3 ...,c clusters where c  m. Thus, the al-

+u into  = 2, 3,...,c clusters, where

of test set Xu as determined by clustering of the full sample Xm +u (into  clusters) and

+u

in Corollary 5.1 and guarantee that kc bounds hold si-

multaneously for all kc hypotheses (with probability at least 1 - ). We thus choose the hypothesis which minimizes the resulting bound. This extension is particularly attractive since typically without prior knowledge we do not know which clustering algorithm will be effective for the dataset at hand. 6 Concluding Remarks We presented new bounds for transductive learning algorithms. We also developed a new technique for deriving tight error bounds for compression schemes and for clustering algorithms in the transductive setting. We expect that these bounds and new techniques will be useful for deriving new error bounds for other known algorithms and for deriving new types of transductive learning algorithms. It would be interesting to see if tighter transduction bounds can be obtained by reducing the "slacks" in the inequalities we use in our analysis. Another promising direction is the construction of better (multiple) priors. For example, in our compression bound (Corollary 4.1), for each number of compression points

we can replace ln

cm 

by ln

kcm 


we assigned the same prior to each possible point subset and each possible dichotomy. However, in practice a vast majority of all these subsets and dichotomies are unlikely to occur.

Acknowledgments The work of R.E and R.M. was partially supported by the Technion V.P.R. fund for the promotion of sponsored research. Support from the Ollendorff center of the department of Electrical Engineering at the Technion is also acknowledged. We also thank anonymous referees for their useful comments. References [1] V. N. Vapnik. Estimation of Dependences Based on Empirical Data. Springer Verlag, New York, 1982. [2] V. N. Vapnik. Statistical Learning Theory. Wiley Interscience, New York, 1998. [3] T. Joachims. Transductive inference for text classification unsing support vector machines. In European Conference on Machine Learning, 1999. [4] A. Blum and S. Chawla. Learning from labeled and unlabeled data using graph mincuts. In Proceeding of The Eighteenth International Conference on Machine Learning (ICML 2001), pages 19­26, 2001. [5] R. El-Yaniv and O. Souroujon. Iterative double clustering for unsupervised and semisupervised learning. In Advances in Neural Information Processing Systems (NIPS 2001), pages 1025­1032, 2001. [6] T. Joachims. Transductive learning via spectral graph partitioning. In Proceeding of The Twentieth International Conference on Machine Learning (ICML-2003), 2003. [7] D. McAllester. Some PAC-Bayesian theorems. Machine Learning, 37(3):355­363, 1999.

[8] D. McAllester. 51(1):5­21, 2003. PAC-Bayesian stochastic model selection. Machine Learning,

[9] D. Wu, K. Bennett, N. Cristianini, and J. Shawe-Taylor. Large margin trees for induction and transduction. In International Conference on Machine Learning, 1999. [10] L. Bottou, C. Cortes, and V. Vapnik. On the effective VC dimension. Technical report, AT&T, 1994. [11] G.R.G. Lanckriet, N. Cristianini, L. El Ghaoui, P. Bartlett, and M.I. Jordan. Learning the kernel matrix with semi-definite programming. Technical report, University of Berkeley, Computer Science Division, 2002. [12] A. Blum and J. Langford. Pac-mdl bounds. In COLT, pages 344­357, 2003. [13] W. Hoeffding. Probability inequalities for sums of bounded random variables. J. Amer. Statis. Assoc., 58:13­30, 1963. [14] A. Dembo and O. Zeitouni. Large Deviation Techniques and Applications. Springer, New York, second edition, 1998. [15] D. McAllester. Simplified pac-bayesian margin bounds. In COLT, pages 203­215, 2003. [16] R. Herbrich. Learning Kernel Classifiers: Theory and Algorithms. MIT Press, Boston, 2002.


