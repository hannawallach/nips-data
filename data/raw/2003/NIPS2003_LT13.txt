Geometric Clustering using the Information Bottleneck method

Susanne Still Department of Physics Princeton Unversity, Princeton, NJ 08544 susanna@princeton.edu

William Bialek Department of Physics Princeton Unversity, Princeton, NJ 08544 wbialek@princeton.edu Leon Bottou ´ NEC Laboratories America 4 Independence Way, Princeton, NJ 08540 leon@bottou.org

Abstract We argue that K­means and deterministic annealing algorithms for geometric clustering can be derived from the more general Information Bottleneck approach. If we cluster the identities of data points to preserve information about their location, the set of optimal solutions is massively degenerate. But if we treat the equations that define the optimal solution as an iterative algorithm, then a set of "smooth" initial conditions selects solutions with the desired geometrical properties. In addition to conceptual unification, we argue that this approach can be more efficient and robust than classic algorithms.

1 Introduction Clustering is one of the most widespread methods of data analysis and embodies strong intuitions about the world: Many different acoustic waveforms stand for the same word, many different images correspond to the same object, etc.. At a colloquial level, clustering groups data points so that points within a cluster are more similar to one another than to points in different clusters. To achieve this, one has to assign data points to clusters and determine how many clusters to use. (Dis)similarity among data points might, in the simplest example, be measured with the Euclidean norm, and then we could ask for a clustering of the points1 {xi}, i = 1, 2, ..., N, such that the mean square distance among points within the clusters is minimized,

Nc

1 Nc 1 nc |xi - xj|2, (1)

c=1 ijc

where there are Nc clusters and nc points are assigned to cluster c. Widely used iterative reallocation algorithms such as K­means [5, 8] provide an approximate solution to the

1 Notation: All bold faced variables in this paper denote vectors.


problem of minimizing this quantity. Several alternative cost functions have been proposed (see e.g. [5]), and some use analogies with physical systems [3, 7]. However, this approach does not give a principled answer to how many clusters should be used. One often introduces and optimizes another criterion to find the optimal number of clusters, leading to a variety of "stopping rules" for the clustering process [5]. Alternatively, cross-validation methods can be used [11] or, if the underlying distribution is assumed to have a certain shape (mixture models), then the number of clusters can be found, e.g by using the BIC [4]. A different view of clustering is provided by information theory. Clustering is viewed as lossy data compression; the identity of individual points ( log2 N bits) is replaced by the identity of the cluster to which they are assigned ( log2 Nc bits log2 N bits). Each cluster is associated with a representative point xc, and what we lose in the compression this trading between data compression and error is rate­distortion theory [10], which again requires us to specify a function d(xi, xc) that measures the magnitude of our error in replacing xi by xc. The trade-off between the coding cost and the distortion defines a one parameter family of optimization problems, and this parameter can be identified with temperature through an analogy with statistical mechanics [9]. As we lower the temperature there are phase transitions to solutions with more and more distinct clusters, and if we fix the number of clusters and vary the temperature we find a smooth variation from "soft" (probabilistic) to "hard" (deterministic) clustering. For distortion functions d(x, x )  (x - x )2, a deterministic annealing approach to solving the variational problem converges to the K­means algorithm in the limit of zero temperature [9]. A more general information theoretic approach to clustering, the Information Bottleneck method [13], explicitly implements the idea that our analysis of the data typically is motivated by our interest in some derived quantity (e.g., words from sounds) and that we should preserve this relevant information rather than trying to guess at what metric in the space of our data will achieve the proper feature selection. We imagine that each point xi occurs together with a corresponding variable vi, and that v is really the object of interest.2 Rather than trying to select the important features of similarity among different points xi, we cluster in x space to compress our description of these points while preserving as much information as possible about v, and again this defines a one parameter family of optimization problems. In this formulation there is no need to define a similarity (or distortion) measure; this measure arises from the optimization principle itself. Furthermore, this framework allows us to find the optimal number of clusters for a finite data set using perturbation theory [12]. The Information Bottleneck principle thus allows a full solution of the clustering problem. The Information Bottleneck approach is attractive precisely because the generality of information theory frees us from a need to specify in advance what it means for data points to be similar: Two points can be clustered together if this merger does not lose too much information about the relevant variable v. More precisely, because mutual information is invariant to any invertible transformation of the variables, approaches which are built entirely from such information theoretic quantities are independent of any arbitrary assumptions about what it means for two points to be close in the data space. This is especially attractive if we want the same information theoretic principles to apply both to the analysis of, for example, raw acoustic waveforms and to the sequences of words for which these sounds might stand [2]. On the other hand, it is not clear how to incorporate a geometric intuition into the Information Bottleneck approach. A natural and purely information theoretic formulation of geometric clustering might ask that we cluster the points, compressing the data index i  [1, N] into a smaller set of cluster

are the deviations of the individual xi c , from the representative xc. One way to formalize

2 v does not have to live in the same space as the data xi.


indices c  [1, Nc] so that we preserve as much information as possible about the locations of the points, i.e. location x becomes the relevant variable. Because mutual information is a geometric invariant, however, such a problem has an infinitely degenerate set of solutions. We emphasize that this degeneracy is a matter of principle, and not a failing of any approximate algorithm for solving the optimization problem. What we propose here is to lift this degeneracy by choosing the initial conditions for an iterative algorithm which solves the Information Bottleneck equations. In effect our choice of initial conditions expresses a notion of smoothness or geometry in the space of the {xi}, and once this is done the dynamics of the iterative algorithm lead to a finite set of fixed points. For a broad range of temperatures in the Information Bottleneck problem the solutions we find in this way are precisely those which would be found by a K­means algorithm, while at a critical temperature we recover the deterministic annealing approach to rate­distortion theory. In addition to the conceptual attraction of connecting these very different approaches to clustering in a single information theoretic framework, we argue that our approach may have some advantages of robustness.

2 Derivation of K­means from the Information Bottleneck method We use the Information Bottleneck method to solve the geometric clustering problem and compress the data indices i into cluster indices c in a lossy way, keeping as much information about the location x in the compression as possible. The variational principle is then max [I(x, c) - I(c, i)]

p(c|i)

(2)

where  is a Lagrange parameter which regulates the trade-off between compression and preservation of relevant information. Following [13], we assume that p(x|i, c) = p(x|i), i.e. the distribution of locations for a datum, if the index of the datum is known, does not depend explicitly on how we cluster. Then p(x|c) is given by the Markov condition

p(x|c) = 1 p(c) p(x|i)p(c|i)p(i). (3)

i

For simplicity, let us discretize the space that the data live in, let us assume that it is a finite domain and that we can estimate the probability distribution p(x) by a normalized histogram. Then the data we observe determine p(x|i) = xxi, (4) where xxi is the Kronecker-delta which is 1 if x = xi and zero otherwise. The probability of indices is, of course, p(i) = 1/N. The optimal assignment rule follows from the variational principle (2) and is given by

p(c|i) = p(c) Z(i, ) exp 1  p(x|i) log2 [p(x|c)] . (5)

x

where Z(i, ) ensures normalization. This equation has to be solved self consistently together with eq.(3) and p(c) = p(c|i)/N . These are the Information Bottleneck equations and they can be solved iteratively [13]. Denoting by pn the probability distribution

i


after the n-th iteration, the iterative algorithm is given by

pn -1 (c)

pn(c|i) = pn(x|c) =

pn(c) =

exp p(x|i) log2 [pn -1

Zn(i, ) 1

N pn -1

1  (x|c)] , (6)

x

p(x|i)pn(c|i), (7)

(c) i

1 N pn(c|i). (8)

i

Let d(x, x ) be a distance measure on the data space. We choose Nc cluster centers xc random and initialize

p0(x|c) = 1 Z0(c, ) exp -1sd(x,xc (0) )

(0) at

(9)

where Z0(c, ) is a normalization constant and s > 0 is some arbitrary length scale ­ the reason for introducing s will become apparent in the following treatment. After each

(n)

iteration, we determine the cluster centers xc 0 = pn(x|c)

x

which for the squared distance reduces to

x (n) c =

, n  1, according to (compare [9])

d(x, xc xc (n) (n) ) ,

(10)

x pn(x|c). (11)

x

We furthermore initialize p0(c) = 1/Nc, where Nc is the number of clusters. Now define the index ci such that it denotes the cluster with cluster center closest to the datum xi (in the n-th iteration):

ci := arg min d(xi, xc

c

(n) ). (12)

Proposition: If 0 <  < 1, and if the cluster indexed by ci is non­empty, then for n   p(c|i) = cc. (13)

i

Proof: From (7) and (4) we know that pn(x|c)  we have

pn(c|i)/pn -1

and hence pn(x|c)

exp - s d(x, xc 1 (0)

(c)  exp 1 

/

i xxipn(c|i)/pn-1(c) and from (6)

p(x|i) log2 [pn -1 (x|c)] ,

(14) 

x

 (pn -1 (x|c))1 . Substituting (9), we have p1(x|c)

) . The cluster centers xc (n) are updated in each iteration and therefore

we have after n iterations:

1 pn(x|c)  exp -snd(x,xc (n-1) ) (15)

where the proportionality constant has to ensure normalization of the probability measure. Use (14) and (15) to find that

1 pn(c|i)  pn

-1 (c) exp -snd(xi,xc (n-1) ) . (16)


and again the proportionality constant has to ensure normalization. We can now write the probability that a data point is assigned to the cluster nearest to it: pn(ci |i) =

 1

1

-1 (ci )

+ pn -1 (c) exp d(xi, xc (n-1)

(n-1)

) - d(xi, xc )

i pn

1 -sn

c=c i

(n-1) (n-1)

-1 (17)

By definition d(xi, xc

exp - sn 1 d(xi, xc (n-1)

) - d(xi, xc ) > 0 c = ci , and thus for n  ,

i

) - d(xi, xc )

i

(n-1)

 0, and for clusters that do not have zero

occupancy, i.e for which pn -1 (ci ) > 0, we have p(ci |i)  1. Finally, because of normal-

ization, p(c = ci |i) must be zero. From eq. (13) follows with equations (4), (7) and (11) that for n  

xc = 1 nc xicc,

i

(18)

x

where nc =

i

cc. This means that for the square distance measure, this algorithm i

produces the familiar K­means solution: we get a hard clustering assignment (13) where each datum i is assigned to the cluster ci with the nearest center. Cluster centers are updated according to eq. (18) as the average of all the points that have been assigned to that cluster. For some problems, the squared distance might be inappropriate, and the update rule for computing the cluster centers depends on the particular distance function (see eq. 10). Example. We consider the squared Euclidean distance, d(x, x ) = |x - x |2/2. With this distance measure, eq. (15) tells us that the (Gaussian) distribution p(x|c) contracts around the cluster center xc as the number of iterations increases. The xc's are, of course, recomputed in every iteration, following eq. (11). We create a synthetic data set by drawing 2500 data points i.i.d. from four two-dimensional Gaussian distributions with different means and the same variance. Figure (1) shows the result of numerical iteration of the equations (14) and (16) ­ ensuring proper normalization ­ as well as (8) and (11), with  = 0.5 and s = 0.5. The algorithm converges to a stable solution after n = 14 iterations. This algorithm is less sensitive to initial conditions than the regular K­means algorithm. We measure the goodness of the classification by evaluating how much relevant information I(x, c) the solution captures. In the case we are looking at, the relevant information reduces to the entropy H[p(c)] of the distribution p(c) at the solution3. We used 1000 different random initial conditions for the cluster centers and for each, we iterated eqs. (8), (11), (14) and (16) on the data in Fig. 1. We found two different values for H[p(c)] at the solution, indicating that there are at least two local maxima in I(x, c). Figure 2 shows the fraction of the initial conditions that converged to the global maximum. This number depends on the parameters s and . For d(x, x ) = |x - x |2/2s, the initial distribution p(0)(x|c) is Gaussian with variance s. Larger variance s makes the algorithm less sensitive to the initial location of the cluster centers. Figure 2 shows that, for large values of s, we obtain a solution that corresponds to the global maximum of I(x, c) for 100% of the initial conditions. Here, we fixed  at reasonably small values to ensure fast convergence (  {0.05, 0.1, 0.2}). For these  values, the number of iterations till convergence lies cc . Data points which are located at one particular position: p(x|i) = xxi . We thus have

3 I(x, c) = H[p(c)] + p(x) p(c|x) log2(p(c|x)). Deterministic assignments: p(c|i) =

x c

i

p(c|x) =

Then c

1 N p(c) p(c|i)p(x|i) =

i

1 N p(c)

i xxi cci = ccx , where cx = arg minc d(x, xc).

p(c|x) log2(p(c|x) = 0 and hence I(x, c) = H[p(c)].


2.5

2

1.5

1

0.5

0

-0.5

-1

-1.5

-2

-2.5 -2 -1.5 -1 -0.5 0 0.5 1 1.5 2 2.5 3

Figure 1: 2500 data points drawn i.i.d from four Gaussian distributions with different means and the same variance. Those data which got assigned to the same cluster are plotted with the same symbol. The dotted traces indicate movements of the cluster centers (black stars) from their initial positions in the lower left corner of the graph to their final positions close to the means of the Gaussian distributions (black circles) after 14 iterations.

between 10 and 20 (for 0.5 < s < 500). As we increase  there is a (noisy) trend to more iterations. In comparison, we did the same test using regular K­means [8] and obtained a globally optimal solution from only 75.8% of the initial cluster locations. To see how this algorithm performs on data in a higher dimensional space, we draw 2500 points from 4 twenty-dimensional Gaussians with variance 0.3 along each dimension. The typical euclidean distances between the means are around 7. We tested the robustness to initial center locations in the same way as we did for the two dimensional data. Despite the high signal to noise ratio, the regular K­means algorithm [8], run on this data, finds a globally optimal solution for only 37.8% of the initial center locations, presumably because the data is relatively scarce and therefore the objective function is relatively rough. We found that our algorithm converged to the global optimum for between 78.0% and 81.0% of the initial center locations for large enough values of s (1000 < s < 10000) and  = 0.1. 3 Discussion Connection to deterministic annealing. For  = 1, we obtain the solution

pn(c|i)  exp -1sd(xi,xc (n-1) ) (19)

where the proportionality constant ensures normalization. This equation, together with eq. (11), recovers the equations derived from rate distortion theory in [9] (for square distance), only here the length scale s appears in the position of the annealing temperature T in [9]. We call this parameter the annealing temperature, because [9] suggests the following deterministic annealing scheme: start with large T; fix the xc's and compute the optimal assignment rule according to eq. (19), then fix the assignment rule and compute the xc's according to eq. (11), and repeat these two steps until convergence. Then lower the temper-


100

=0.2

=0.1

95

% 90

=0.05

85

80 0

10 1

10 s 2 10 3 10

Figure 2: Robustness of algorithm to initial center positions as a function of the initial variance, s. 1000 different random initial positions were used to obtain clustering solutions on the data shown in Fig. 1. Displayed is, as a function of the initial variance s, the percent of initial center positions that converge to a global maximum of the objective function. In comparison, regular K­means [8] converges to the global optimum for only 75.8% of the initial center positions. The parameter  is kept fixed at reasonably small values (indicated in the plot) to ensure fast convergence (between 10 and 20 iterations).

ature and repeat the procedure. There is no general rule that tells us how slow the annealing has to be. In contrast, the algorithm we have derived here for  < 1 suggests to start with a very large initial temperature, given by s, by making s very large and to lower the temperature rapidly by making  reasonably small. In contrast to the deterministic annealing scheme, we do not iterate the equations for the optimal assignment rule and cluster centers till convergence before we lower the temperature, but instead the temperature is lowered by a factor of  after each iteration. This produces an algorithm that converges rapidly while finding a globally optimal solution with high probability. for d(x, x ) = |x - x |2/2, the clusters are simply Gaussians. For  > 1, we obtain a useless solution for n  , that assigns all the data to one cluster. Optimal number of clusters One of the advancements that the approach we have laid out here should bring is that it should now be possible to extend our earlier results on finding the optimal number of clusters [12] to the problem of geometric clustering. We have to leave the details for a future paper, but essentially we would argue that as we observe a finite number of data points, we make an error in estimating the distribution that underlies the generation of these data points. This mis-estimate leads to a systematic error in evaluating the relevant information. We have computed this error using perturbation theory [12]. For deterministic assignments (as we have in the hard K­means solution), we know that a correction of the error introduces a penalty in the objective function for using more clusters and this allows us to find the optimal number of clusters. Since our result says that the penalty depends on the number of bins that we use to estimate the distribution underlying the data [12], we either have to know the resolution with which to look at our

For  = 1, we furthermore find from eq. (15), that pn(x|c)  exp -1sd(x, xc (n-1) ) , and


data, or estimate this resolution from the size of the data set, as in e.g. [1, 6]. A combination of these insights should tell us how to determine, for geometrical clustering, the number of clusters that is optimal for a finite data set. 4 Conclusion We have shown that it is possible to cast geometrical clustering into the general, information theoretic framework provided by the Information Bottleneck method. More precisely, we cluster the data keeping information about location and we have shown that the degeneracy of optimal solutions, which arises from the fact that the mutual information is invariant to any invertible transformation of the variables, can be lifted by the correct choice of the initial conditions for the iterative algorithm which solves the Information Bottleneck equations. We have shown that for a large range of values of the Lagrange multiplier  (which regulates the trade-off between compression and preservation of relevant information), we obtain an algorithm that converges to a hard clustering K­means solution. We have found some indication that this algorithm might be more robust to initial center locations than regular K­means. Our results also suggest an annealing scheme, which might prove to be faster than the deterministic annealing approach to geometrical clustering, known from rate­distortion theory [9]. We recover the later for  = 1. Our results shed new light on the connection between the relatively novel Information Bottleneck method and earlier approaches to clustering, particularly the well-established K­means algorithm. Acknowledgments We thank G. Atwal and N. Slonim for interesting discussions. S. Still acknowledges support from the German Research Foundation (DFG), grant no. Sti197. References [1] W. Bialek and C. G. Callan and S. P. Strong, Phys. Rev. Lett. 77 (1996) 4693-4697, http://arxiv.org/abs/cond-mat/9607180 [2] W. Bialek in Physics of bio-molecules and cells; Ecole d'ete de physique theorique Les Houches Session LXXV Eds.: H. Flyvbjerg, F. J¨ulicher, P. Ormos and F. David (2001) Springer-Verlag, pp.485­577, http://arxiv.org/abs/physics/0205030 [3] M. Blatt, S. Wiseman and E. Domany, Phys. Rev. Lett. 76 (1996) 3251-3254, http://arxiv.org/abs/cond-mat/9702072 [4] C. Fraley and A. Raftery, J. Am. Stat. Assoc. 97 (2002) 611-631. [5] A. D. Gordon, Classification, (1999) Chapmann and Hall/CRC Press, London. [6] P. Hall and E. J. Hannan, Biometrika 75, 4 (1988) 705-714. [7] D. Horn and A. Gottlieb, Phys. Rev. Lett. 88 (2002) 018702, extended version: http://arxiv.org/abs/physics/0107063 [8] J. MacQueen in Proc. 5th Berkeley Symp. Math. Statistics and Probability Eds.: L.M.L Cam and J. Neyman (1967) University of California Press, pp. 281-297 (Vol. I) [9] K. Rose, E. Gurewitz and G. C. Fox, Phys. Rev. Lett. 65 (1990) 945; and: K. Rose, Proceedings of the IEEE 86, 11 (1998) pp. 2210-2239. [10] C. E. Shannon, Bell System Tech. J. 27, (1948). pp. 379-423, 623-656. See also: C. Shannon and W. Weaver, The Mathematical Theory of Communication (1963) University of Illinois Press [11] P. Smyth, Statistics and Computing 10, 1 (2000) 63-72. [12] S. Still and W. Bialek (2003, submitted), available at http://arxiv.org/abs/physics/0303011 [13] N. Tishby, F. Pereira and W. Bialek in Proc. 37th Annual Allerton Conf. Eds.: B. Hajek and R. S. Sreenivas (1999) University of Illinois, http://arxiv.org/abs/physics/0004057

´ ´


